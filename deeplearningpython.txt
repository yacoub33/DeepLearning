# -*- coding: utf-8 -*-
"""DeepLearningPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k6NfYwHF1qPyV7Y9gwLDiZjmyFXpGGdW
"""

import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np

"""## **Model**"""

mnist = tf.keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_train, axis=1)

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=3)

plt.imshow(x_train[0]) #, cmap = plt.cm.binary
plt.show()
# print(x_train[0])

model.save('num_reader')

new_model = tf.keras.models.load_model('num_reader')

predictions = new_model.predict([x_test])

print(predictions)

"""## **Predictions**

### Prediction #**1**
"""

print(np.argmax(predictions[0]))

plt.imshow(x_test[0])
plt.show()

"""### Prediction #**2**"""

print(np.argmax(predictions[1]))

plt.imshow(x_test[1])
plt.show()

"""### Prediction #***3***"""

print(np.argmax(predictions[2]))

plt.imshow(x_test[2])
plt.show()